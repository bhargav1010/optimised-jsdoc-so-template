<!DOCTYPE html>
<html lang="en">
<head>
    <?js if (!env.conf.docdash) { env.conf.docdash = {};} ?>
    <meta charset="utf-8">
    <title><?js= ((env.conf.docdash.meta && env.conf.docdash.meta.title) || "Documentation") ?></title>
    <?js if (env.conf.docdash.meta) { ?>
    <?js if (env.conf.docdash.meta.description) { ?><meta name="description" content="<?js= env.conf.docdash.meta.description ?>" /><?js } ?>
    <?js if (env.conf.docdash.meta.keyword) { ?>
        <meta name="keywords" content="<?js= env.conf.docdash.meta.keyword ?>" />
        <meta name="keyword" content="<?js= env.conf.docdash.meta.keyword ?>" />
    <?js } ?>
    <?js } ?>
    <?js if (env.conf.docdash.openGraph) { ?>
    <meta property="og:title" content="<?js= env.conf.docdash.openGraph.title ?>"/>
    <meta property="og:type" content="<?js= env.conf.docdash.openGraph.type ?>"/>
    <meta property="og:image" content="<?js= env.conf.docdash.openGraph.image ?>"/>
    <?js if (env.conf.docdash.openGraph.site_name) { ?><meta property="og:site_name" content="<?js= env.conf.docdash.openGraph.site_name ?>"/><?js } ?>
    <meta property="og:url" content="<?js= env.conf.docdash.openGraph.url ?>"/>
    <?js } ?>

<!-- Script code for commonNav-->
<?js if (title == 'Script') { ?>

    <script>
        function scrollToNavItem() {
        var path = window.location.href.split('/').pop().replace(/\.html/, '');
        document.querySelectorAll('nav a').forEach(function(link) {
        var href = link.attributes.href.value.replace(/\.html/, '');
        if (path === href) {
            link.scrollIntoView({block: 'center'});
            return;
        }
        })
    }

    scrollToNavItem();
    </script>

    <?js if (env.conf.docdash.commonNav) { ?>
    <script>
    if (typeof fetch === 'function') {
    const init = () => {
        if (typeof scrollToNavItem !== 'function') return false
        scrollToNavItem()
        // hideAllButCurrent not always loaded
        if (typeof hideAllButCurrent === 'function') hideAllButCurrent()
        return true
    }
    fetch('./nav.inc.html')
        .then(response => response.ok ? response.text() : `${response.url} => ${response.status} ${response.statusText}`)
        .then(body => {
        document.querySelector('nav').innerHTML += body
        // nav.js should be quicker to load than nav.inc.html, a fallback just in case
        return init()
        })
        .then(done => {
        if (done) return
        let i = 0
        ;(function waitUntilNavJs () {
            if (init()) return
            if (i++ < 100) return setTimeout(waitUntilNavJs, 300)
            console.error(Error('nav.js not loaded after 30s waiting for it'))
        })()
        })
        .catch(error => console.error(error))
    } else {
    console.error(Error('Browser too old to display commonNav (remove commonNav docdash option)'))
    }
    </script>
    <?js } ?>
<?js } ?>

<!-- Syles code -->
<?js if (title == 'Styles') { ?>
    <style>
            * {
    box-sizing: border-box
    }

    html, body {
    height: 100%;
    width: 100%;
    }

    body {
    color: #4d4e53;
    background-color: white;
    margin: 0 auto;
    padding: 0 20px;
    font-family: 'Helvetica Neue', Helvetica, sans-serif;
    font-size: 16px;
    }

    img {
    max-width: 100%;
    }

    a,
    a:active {
    color: #606;
    text-decoration: none;
    }

    a:hover {
    text-decoration: none;
    }

    article a {
    border-bottom: 1px solid #ddd;
    }

    article a:hover, article a:active {
    border-bottom-color: #222;
    }

    article .description a {
        word-break: break-word;
    }

    p, ul, ol, blockquote {
    margin-bottom: 1em;
    line-height: 160%;
    }

    h1, h2, h3, h4, h5, h6 {
    font-family: 'Montserrat', sans-serif;
    }

    h1, h2, h3, h4, h5, h6 {
    color: #000;
    font-weight: 400;
    margin: 0;
    }

    h1 {
    font-weight: 300;
    font-size: 48px;
    margin: 1em 0 .5em;
    }

    h1.page-title {
    font-size: 48px;
    margin: 1em 30px;
    line-height: 100%;
    word-wrap: break-word;
    }

    h2 {
    font-size: 24px;
    margin: 1.5em 0 .3em;
    }

    h3 {
    font-size: 24px;
    margin: 1.2em 0 .3em;
    }

    h4 {
    font-size: 18px;
    margin: 1em 0 .2em;
    color: #4d4e53;
    }

    h4.name {
    color: #fff;
    background: #6d426d;
    box-shadow: 0 .25em .5em #d3d3d3;
    border-top: 1px solid #d3d3d3;
    border-bottom: 1px solid #d3d3d3;
    margin: 1.5em 0 0.5em;
    padding: .75em 0 .75em 10px;
    }

    h4.name a {
    color: #fc83ff;
    }

    h4.name a:hover {
    border-bottom-color: #fc83ff;
    }

    h5, .container-overview .subsection-title {
    font-size: 120%;
    letter-spacing: -0.01em;
    margin: 8px 0 3px 0;
    }

    h6 {
    font-size: 100%;
    letter-spacing: -0.01em;
    margin: 6px 0 3px 0;
    font-style: italic;
    }

    .usertext h1 {
    font-family: "Source Sans Pro";
    font-size: 24px;
    margin: 2.5em 0 1em;
    font-weight: 400;
    }

    .usertext h2 {
    font-family: "Source Sans Pro";
    font-size: 18px;
    margin: 2em 0 0.5em;
    font-weight: 400;

    }

    .usertext h3 {
    font-family: "Source Sans Pro";
    font-size: 15px;
    margin: 1.5em 0 0;
    font-weight: 400;
    }

    .usertext h4 {
    font-family: "Source Sans Pro";
    font-size: 14px;
    margin: 0 0 0;
    font-weight: 400;
    }

    .usertext h5 {
    font-size: 12px;
    margin: 1em 0 0;
    font-weight: normal;
    color: #666;
    }

    .usertext h6 {
    font-size: 11px;
    margin: 1em 0 0;
    font-weight: normal;
    font-style: normal;
    color: #666;
    }


    tt, code, kbd, samp, pre {
    font-family: Consolas, Monaco, 'Andale Mono', monospace;
    background: #f4f4f4;
    }

    tt, code, kbd, samp{
    padding: 1px 5px;
    }

    pre {
    padding-bottom: 1em;
    }  

    .class-description {
    font-size: 130%;
    line-height: 140%;
    margin-bottom: 1em;
    margin-top: 1em;
    }

    .class-description:empty {
    margin: 0
    }

    #main {
    float: right;
    width: calc(100% - 240px);
    }

    header {
    display: block
    }

    section {
    display: block;
    background-color: #fff;
    padding: 0 0 0 30px;
    }

    .variation {
    display: none
    }

    .signature-attributes {
    font-size: 60%;
    color: #eee;
    font-style: italic;
    font-weight: lighter;
    }

    nav {
    float: left;
    display: block;
    width: 250px;
    background: #fff;
    overflow: auto;
    position: fixed;
    height: 100%;
    }

    nav #nav-search{
        width: 210px;
        height: 30px;
        padding: 5px 10px;
        font-size: 12px;
        line-height: 1.5;
        border-radius: 3px;
        margin-right: 20px;
        margin-top: 20px;
        border: 1px solid #98999A;
    }

    nav.wrap a{
        word-wrap: break-word;
    }

    nav h3 {
    margin-top: 12px;
    font-size: 13px;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 700;
    line-height: 24px;
    margin: 15px 0 10px;
    padding: 0;
    color: #000;
    }

    nav h3.collapsed_header {
    cursor: pointer;
    }

    nav ul {
    font-family: 'Lucida Grande', 'Lucida Sans Unicode', arial, sans-serif;
    font-size: 100%;
    line-height: 17px;
    padding: 0;
    margin: 0;
    list-style-type: none;
    }

    nav ul a,
    nav ul a:active {
    font-family: 'Montserrat', sans-serif;
    line-height: 18px;
    padding: 0;
    display: block;
    font-size: 12px;
    }

    nav a:hover,
    nav a:active {
    color: #606;
    }

    nav > ul {
    padding: 0 10px;
    }

    nav > ul > li > a {
    color: #606;
    margin-top: 10px;
    }

    nav ul ul a {
    color: hsl(207, 1%, 60%);
    border-left: 1px solid hsl(207, 10%, 86%);
    }

    nav ul ul a,
    nav ul ul a:active {
    padding-left: 20px
    }

    nav h2 {
    font-size: 13px;
    margin: 10px 0 0 0;
    padding: 0;
    }

    nav > h2 > a {
    margin: 10px 0 -10px;
    color: #606 !important;
    }

    footer {
    color: hsl(0, 0%, 28%);
    margin-left: 250px;
    display: block;
    padding: 15px;
    font-style: italic;
    font-size: 90%;
    }

    .ancestors {
    color: #999
    }

    .ancestors a {
    color: #999 !important;
    }

    .important {
    font-weight: bold;
    color: #950B02;
    }

    .yes-def {
    text-indent: -1000px
    }

    .type-signature {
    color: #CA79CA
    }

    .type-signature:last-child {
    color: #eee;
    }

    .name, .signature {
    font-family: Consolas, Monaco, 'Andale Mono', monospace
    }

    .signature {
        color: #fc83ff;
    }

    .details {
    margin-top: 6px;
    border-left: 2px solid #DDD;
    line-height: 20px;
    font-size: 14px;
    }

    .details dt {
    width: auto;
    float: left;
    padding-left: 10px;
    }

    .details dd {
    margin-left: 70px;
    margin-top: 6px;
    margin-bottom: 6px;
    }

    .details ul {
    margin: 0
    }

    .details ul {
    list-style-type: none
    }

    .details pre.prettyprint {
    margin: 0
    }

    .details .object-value {
    padding-top: 0
    }

    .description {
    margin-bottom: 1em;
    margin-top: 1em;
    }

    .code-caption {
    font-style: italic;
    font-size: 107%;
    margin: 0;
    }

    .prettyprint {
    font-size: 14px;
    overflow: auto;
    }

    .prettyprint.source {
    width: inherit;
    line-height: 18px;
    display: block;
    background-color: #0d152a;
    color: #aeaeae;
    }

    .prettyprint code {
    line-height: 18px;
    display: block;
    background-color: #0d152a;
    color: #4D4E53;
    }

    .prettyprint > code {
    padding: 15px;
    }

    .prettyprint .linenums code {
    padding: 0 15px
    }

    .prettyprint .linenums li:first-of-type code {
    padding-top: 15px
    }

    .prettyprint code span.line {
    display: inline-block
    }

    .prettyprint.linenums {
    padding-left: 70px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    }

    .prettyprint.linenums ol {
    padding-left: 0
    }

    .prettyprint.linenums li {
    border-left: 3px #34446B solid;
    }

    .prettyprint.linenums li.selected, .prettyprint.linenums li.selected * {
    background-color: #34446B;
    }

    .prettyprint.linenums li * {
    -webkit-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
    }

    .prettyprint.linenums li code:empty:after {
    content:"";
    display:inline-block;
    width:0px;
    }

    table {
    border-spacing: 0;
    border: 1px solid #ddd;
    border-collapse: collapse;
    border-radius: 3px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    width: 100%;
    font-size: 14px;
    margin: 1em 0;
    }

    td, th {
    margin: 0px;
    text-align: left;
    vertical-align: top;
    padding: 10px;
    display: table-cell;
    }

    thead tr, thead tr {
    background-color: #fff;
    font-weight: bold;
    border-bottom: 1px solid #ddd;
    }

    .params .type {
    white-space: nowrap;
    }

    .params code {
    white-space: pre;
    }

    .params td, .params .name, .props .name, .name code {
    color: #4D4E53;
    font-family: Consolas, Monaco, 'Andale Mono', monospace;
    font-size: 100%;
    }

    .params td {
    border-top: 1px solid #eee
    }

    .params td.description > p:first-child, .props td.description > p:first-child {
    margin-top: 0;
    padding-top: 0;
    }

    .params td.description > p:last-child, .props td.description > p:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    }

    span.param-type, .params td .param-type, .param-type dd {
    color: #606;
    font-family: Consolas, Monaco, 'Andale Mono', monospace
    }

    .param-type dt, .param-type dd {
    display: inline-block
    }

    .param-type {
    margin: 14px 0;
    }

    .disabled {
    color: #454545
    }

    /* navicon button */
    .navicon-button {
    display: none;
    position: relative;
    padding: 2.0625rem 1.5rem;
    transition: 0.25s;
    cursor: pointer;
    -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    opacity: .8;
    }
    .navicon-button .navicon:before, .navicon-button .navicon:after {
    transition: 0.25s;
    }
    .navicon-button:hover {
    transition: 0.5s;
    opacity: 1;
    }
    .navicon-button:hover .navicon:before, .navicon-button:hover .navicon:after {
    transition: 0.25s;
    }
    .navicon-button:hover .navicon:before {
    top: .825rem;
    }
    .navicon-button:hover .navicon:after {
    top: -.825rem;
    }

    /* navicon */
    .navicon {
    position: relative;
    width: 2.5em;
    height: .3125rem;
    background: #000;
    transition: 0.3s;
    border-radius: 2.5rem;
    }
    .navicon:before, .navicon:after {
    display: block;
    content: "";
    height: .3125rem;
    width: 2.5rem;
    background: #000;
    position: absolute;
    z-index: -1;
    transition: 0.3s 0.25s;
    border-radius: 1rem;
    }
    .navicon:before {
    top: .625rem;
    }
    .navicon:after {
    top: -.625rem;
    }

    /* open */
    .nav-trigger:checked + label:not(.steps) .navicon:before,
    .nav-trigger:checked + label:not(.steps) .navicon:after {
    top: 0 !important;
    }

    .nav-trigger:checked + label .navicon:before,
    .nav-trigger:checked + label .navicon:after {
    transition: 0.5s;
    }

    /* Minus */
    .nav-trigger:checked + label {
    -webkit-transform: scale(0.75);
            transform: scale(0.75);
    }

    /* × and + */
    .nav-trigger:checked + label.plus .navicon,
    .nav-trigger:checked + label.x .navicon {
    background: transparent;
    }

    .nav-trigger:checked + label.plus .navicon:before,
    .nav-trigger:checked + label.x .navicon:before {
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
    background: #FFF;
    }

    .nav-trigger:checked + label.plus .navicon:after,
    .nav-trigger:checked + label.x .navicon:after {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    background: #FFF;
    }

    .nav-trigger:checked + label.plus {
    -webkit-transform: scale(0.75) rotate(45deg);
            transform: scale(0.75) rotate(45deg);
    }

    .nav-trigger:checked ~ nav {
    left: 0 !important;
    }

    .nav-trigger:checked ~ .overlay {
    display: block;
    }

    .nav-trigger {
    position: fixed;
    top: 0;
    clip: rect(0, 0, 0, 0);
    }

    .overlay {
    display: none;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background: hsla(0, 0%, 0%, 0.5);
    z-index: 1;
    }

    /* nav level */
    .level-hide {
        display: none;
    }
    html[data-search-mode] .level-hide {
        display: block;
    }


    @media only screen and (max-width: 680px) {
    body {
        overflow-x: hidden;
    }

    nav {
        background: #FFF;
        width: 250px;
        height: 100%;
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: -250px;
        z-index: 3;
        padding: 0 10px;
        transition: left 0.2s;
    }

    .navicon-button {
        display: inline-block;
        position: fixed;
        top: 1.5em;
        right: 0;
        z-index: 2;
    }

    #main {
        width: 100%;
    }

    #main h1.page-title {
        margin: 1em 0;
    }

    #main section {
        padding: 0;
    }

    footer {
        margin-left: 0;
    }
    }

    /** Add a '#' to static members */
    [data-type="member"] a::before {
    content: '#';
    display: inline-block;
    margin-left: -14px;
    margin-right: 5px;
    }

    #disqus_thread{
        margin-left: 30px;
    }
    </style>
<?js } ?>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger" class="navicon-button x">
  <div class="navicon"></div>
</label>

<label for="nav-trigger" class="overlay"></label>

<?js if (title =='Nav') { ?>
    <nav <?js if (env.conf.docdash.wrap) { ?>class="wrap"<?js } ?>>
        <?js if (env.conf.docdash.search) { ?>
        <input type="text" id="nav-search" placeholder="Search" />
        <?js } ?>
        <?js if (!env.conf.docdash.commonNav) { ?>
        <?js= this.nav ?>
        <?js } ?>
    </nav>
<?js } ?>



<div id="main">

<?js if (title != 'Home') { ?>

<?js if (title != 'Styles' && title != 'Nav'  && title != 'Script') { ?>
    <h1 class="page-title"><?js= title ?></h1>
    <?js } ?>
<?js } ?>


    <?js= content ?>
    
    <?js if (env.conf.docdash.disqus) { ?>
    <div id="disqus_thread"></div>
    <script>
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = '//<?js= env.conf.docdash.disqus ?>.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <?js } ?>
</div>
<!-- Script code -->
<?js if (title == 'Script') { ?>
    <script>
            //IE Fix, src: https://www.reddit.com/r/programminghorror/comments/6abmcr/nodelist_lacks_foreach_in_internet_explorer/
            if (typeof(NodeList.prototype.forEach)!==typeof(alert)){
                NodeList.prototype.forEach=Array.prototype.forEach;
            }
        /*global document */
        (function() {
            var source = document.getElementsByClassName('prettyprint source linenums');
            var i = 0;
            var lineNumber = 0;
            var lineId;
            var lines;
            var totalLines;
            var anchorHash;

            if (source && source[0]) {
                anchorHash = document.location.hash.substring(1);
                lines = source[0].getElementsByTagName('li');
                totalLines = lines.length;

                for (; i < totalLines; i++) {
                    lineNumber++;
                    lineId = 'line' + lineNumber;
                    lines[i].id = lineId;
                    if (lineId === anchorHash) {
                        lines[i].className += ' selected';
                    }
                }
            }
        })();
    </script>
<?js } ?>

<!--  Script code for search  -->
<?js if (env.conf.docdash.search && title == 'Script') { ?>
    <script>
        var searchAttr = 'data-search-mode';
        function contains(a,m){
            return (a.textContent || a.innerText || "").toUpperCase().indexOf(m) !== -1;
        };

        //on search
        document.getElementById("nav-search").addEventListener("keyup", function(event) {
            var search = this.value.toUpperCase();

            if (!search) {
                //no search, show all results
                document.documentElement.removeAttribute(searchAttr);
                
                document.querySelectorAll("nav > ul > li:not(.level-hide)").forEach(function(elem) {
                    elem.style.display = "block";
                });

                if (typeof hideAllButCurrent === "function"){
                    //let's do what ever collapse wants to do
                    hideAllButCurrent();
                } else {
                    //menu by default should be opened
                    document.querySelectorAll("nav > ul > li > ul li").forEach(function(elem) {
                        elem.style.display = "block";
                    });
                }
            } else {
                //we are searching
                document.documentElement.setAttribute(searchAttr, '');

                //show all parents
                document.querySelectorAll("nav > ul > li").forEach(function(elem) {
                    elem.style.display = "block";
                });
                document.querySelectorAll("nav > ul").forEach(function(elem) {
                    elem.style.display = "block";
                });
                //hide all results
                document.querySelectorAll("nav > ul > li > ul li").forEach(function(elem) {
                    elem.style.display = "none";
                });
                //show results matching filter
                document.querySelectorAll("nav > ul > li > ul a").forEach(function(elem) {
                    if (!contains(elem.parentNode, search)) {
                        return;
                    }
                    elem.parentNode.style.display = "block";
                });
                //hide parents without children
                document.querySelectorAll("nav > ul > li").forEach(function(parent) {
                    var countSearchA = 0;
                    parent.querySelectorAll("a").forEach(function(elem) {
                        if (contains(elem, search)) {
                            countSearchA++;
                        }
                    });
                    
                    var countUl = 0;
                    var countUlVisible = 0;
                    parent.querySelectorAll("ul").forEach(function(ulP) {
                        // count all elements that match the search
                        if (contains(ulP, search)) {
                            countUl++;
                        }
                        
                        // count all visible elements
                        var children = ulP.children
                        for (i=0; i<children.length; i++) {
                            var elem = children[i];
                            if (elem.style.display != "none") {
                                countUlVisible++;
                            }
                        }
                    });
                
                    if (countSearchA == 0 && countUl === 0){
                        //has no child at all and does not contain text
                        parent.style.display = "none";
                    } else if(countSearchA == 0 && countUlVisible == 0){
                        //has no visible child and does not contain text
                        parent.style.display = "none";
                    }
                });
                document.querySelectorAll("nav > ul.collapse_top").forEach(function(parent) {
                    var countVisible = 0;
                    parent.querySelectorAll("li").forEach(function(elem) {
                        if (elem.style.display !== "none") {
                            countVisible++;
                        }
                    });
                
                    if (countVisible == 0) {
                        //has no child at all and does not contain text
                        parent.style.display = "none";
                    }
                });
            }
        });
    </script>
<?js } ?>

<!--  Script code for collapse -->
<?js if (env.conf.docdash.collapse && title == 'Script') { ?>
    <script>
        function hideAllButCurrent(){
            //by default all submenut items are hidden
            //but we need to rehide them for search
            document.querySelectorAll("nav > ul").forEach(function(parent) {
                if (parent.className.indexOf("collapse_top") !== -1) {
                    parent.style.display = "none";
                }
            });
            document.querySelectorAll("nav > ul > li > ul li").forEach(function(parent) {
                parent.style.display = "none";
            });
            document.querySelectorAll("nav > h3").forEach(function(section) {
                if (section.className.indexOf("collapsed_header") !== -1) {
                    section.addEventListener("click", function(){
                        if (section.nextSibling.style.display === "none") {
                            section.nextSibling.style.display = "block";
                        } else {
                            section.nextSibling.style.display = "none";
                        }
                    });
                }
            });
            
            //only current page (if it exists) should be opened
            var file = window.location.pathname.split("/").pop().replace(/\.html/, '');
            document.querySelectorAll("nav > ul > li > a").forEach(function(parent) {
                var href = parent.attributes.href.value.replace(/\.html/, '');
                if (file === href) {
                    if (parent.parentNode.parentNode.className.indexOf("collapse_top") !== -1) {
                        parent.parentNode.parentNode.style.display = "block";
                    }
                    parent.parentNode.querySelectorAll("ul li").forEach(function(elem) {
                        elem.style.display = "block";
                    });
                }
            });
        }

        hideAllButCurrent();

        if (typeof fetch === 'function') {
            const init = () => {
            if (typeof scrollToNavItem !== 'function') return false
            scrollToNavItem()
            // hideAllButCurrent not always loaded
            if (typeof hideAllButCurrent === 'function') hideAllButCurrent()
            return true
            }
            fetch('./nav.inc.html')
            .then(response => response.ok ? response.text() : `${response.url} => ${response.status} ${response.statusText}`)
            .then(body => {
                document.querySelector('nav').innerHTML += body
                // nav.js should be quicker to load than nav.inc.html, a fallback just in case
                return init()
            })
            .then(done => {
                if (done) return
                let i = 0
                ;(function waitUntilNavJs () {
                if (init()) return
                if (i++ < 100) return setTimeout(waitUntilNavJs, 300)
                console.error(Error('nav.js not loaded after 30s waiting for it'))
                })()
            })
            .catch(error => console.error(error))
        } else {
            console.error(Error('Browser too old to display commonNav (remove commonNav docdash option)'))
        }
        
        if (typeof fetch === 'function') {
            const init = () => {
            if (typeof scrollToNavItem !== 'function') return false
            scrollToNavItem()
            // hideAllButCurrent not always loaded
            if (typeof hideAllButCurrent === 'function') hideAllButCurrent()
            return true
            }
            fetch('./nav.inc.html')
            .then(response => response.ok ? response.text() : `${response.url} => ${response.status} ${response.statusText}`)
            .then(body => {
                document.querySelector('nav').innerHTML += body
                // nav.js should be quicker to load than nav.inc.html, a fallback just in case
                return init()
            })
            .then(done => {
                if (done) return
                let i = 0
                ;(function waitUntilNavJs () {
                if (init()) return
                if (i++ < 100) return setTimeout(waitUntilNavJs, 300)
                console.error(Error('nav.js not loaded after 30s waiting for it'))
                })()
            })
            .catch(error => console.error(error))
        } else {
            console.error(Error('Browser too old to display commonNav (remove commonNav docdash option)'))
        }
        
        /*global document */
        (function() {
            var source = document.getElementsByClassName('prettyprint source linenums');
            var i = 0;
            var lineNumber = 0;
            var lineId;
            var lines;
            var totalLines;
            var anchorHash;

            if (source && source[0]) {
                anchorHash = document.location.hash.substring(1);
                lines = source[0].getElementsByTagName('li');
                totalLines = lines.length;

                for (; i < totalLines; i++) {
                    lineNumber++;
                    lineId = 'line' + lineNumber;
                    lines[i].id = lineId;
                    if (lineId === anchorHash) {
                        lines[i].className += ' selected';
                    }
                }
            }
        })();

        function scrollToNavItem() {
            var path = window.location.href.split('/').pop().replace(/\.html/, '');
            document.querySelectorAll('nav a').forEach(function(link) {
            var href = link.attributes.href.value.replace(/\.html/, '');
            if (path === href) {
                link.scrollIntoView({block: 'center'});
                return;
            }
            })
        }

        scrollToNavItem();

        //IE Fix, src: https://www.reddit.com/r/programminghorror/comments/6abmcr/nodelist_lacks_foreach_in_internet_explorer/
        if (typeof(NodeList.prototype.forEach)!==typeof(alert)){
            NodeList.prototype.forEach=Array.prototype.forEach;
        }


        var searchAttr = 'data-search-mode';
        function contains(a,m){
            return (a.textContent || a.innerText || "").toUpperCase().indexOf(m) !== -1;
        };

        //on search
        document.getElementById("nav-search").addEventListener("keyup", function(event) {
            var search = this.value.toUpperCase();

            if (!search) {
                //no search, show all results
                document.documentElement.removeAttribute(searchAttr);
                
                document.querySelectorAll("nav > ul > li:not(.level-hide)").forEach(function(elem) {
                    elem.style.display = "block";
                });

                if (typeof hideAllButCurrent === "function"){
                    //let's do what ever collapse wants to do
                    hideAllButCurrent();
                } else {
                    //menu by default should be opened
                    document.querySelectorAll("nav > ul > li > ul li").forEach(function(elem) {
                        elem.style.display = "block";
                    });
                }
            } else {
                //we are searching
                document.documentElement.setAttribute(searchAttr, '');

                //show all parents
                document.querySelectorAll("nav > ul > li").forEach(function(elem) {
                    elem.style.display = "block";
                });
                document.querySelectorAll("nav > ul").forEach(function(elem) {
                    elem.style.display = "block";
                });
                //hide all results
                document.querySelectorAll("nav > ul > li > ul li").forEach(function(elem) {
                    elem.style.display = "none";
                });
                //show results matching filter
                document.querySelectorAll("nav > ul > li > ul a").forEach(function(elem) {
                    if (!contains(elem.parentNode, search)) {
                        return;
                    }
                    elem.parentNode.style.display = "block";
                });
                //hide parents without children
                document.querySelectorAll("nav > ul > li").forEach(function(parent) {
                    var countSearchA = 0;
                    parent.querySelectorAll("a").forEach(function(elem) {
                        if (contains(elem, search)) {
                            countSearchA++;
                        }
                    });
                    
                    var countUl = 0;
                    var countUlVisible = 0;
                    parent.querySelectorAll("ul").forEach(function(ulP) {
                        // count all elements that match the search
                        if (contains(ulP, search)) {
                            countUl++;
                        }
                        
                        // count all visible elements
                        var children = ulP.children
                        for (i=0; i<children.length; i++) {
                            var elem = children[i];
                            if (elem.style.display != "none") {
                                countUlVisible++;
                            }
                        }
                    });
                
                    if (countSearchA == 0 && countUl === 0){
                        //has no child at all and does not contain text
                        parent.style.display = "none";
                    } else if(countSearchA == 0 && countUlVisible == 0){
                        //has no visible child and does not contain text
                        parent.style.display = "none";
                    }
                });
                document.querySelectorAll("nav > ul.collapse_top").forEach(function(parent) {
                    var countVisible = 0;
                    parent.querySelectorAll("li").forEach(function(elem) {
                        if (elem.style.display !== "none") {
                            countVisible++;
                        }
                    });
                
                    if (countVisible == 0) {
                        //has no child at all and does not contain text
                        parent.style.display = "none";
                    }
                });
            }
        });
    </script>
<?js } ?>

<?js if (env.conf.docdash.scripts && env.conf.docdash.scripts.length) {
    for(var i = 0; i < env.conf.docdash.scripts.length; i++){
        if (env.conf.docdash.scripts[i].indexOf(".css") != -1) {
    ?>
    <?js
        } else {
    ?>
    <script src="<?js= env.conf.docdash.scripts[i] ?>"></script>
    <?js
        }
    }
} ?>

</body>
</html>
